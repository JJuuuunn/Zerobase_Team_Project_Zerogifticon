// 1. queryDsl version 정보 추가
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'war'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'org.asciidoctor.jvm.convert' version "3.3.2"
	id 'jacoco'
}

group = 'com.zeogift'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExtensions
}

repositories {
	mavenCentral()

}

ext {
	set('springCloudVersion', "2021.0.3")
}

dependencies {
	// queryDSL dependencies 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.7.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'com.google.guava:guava:31.1-jre'
	implementation 'net.sourceforge.barbecue:barbecue:1.5-beta1'
	implementation 'com.squareup.okhttp3:okhttp:4.10.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.rest-assured:rest-assured:4.2.0'
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
	finalizedBy 'asciidoctor'
	finalizedBy 'jacocoTestReport'
}

// jacoco
jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled true
		html.enabled true
	}
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExtensions'
	dependsOn test
}

task createDocument(type: Copy) {
	dependsOn asciidoctor

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

task moveDocument(type: Copy) {
	dependsOn createDocument

	from file("build/docs/asciidoc")
	into file("build/resources/main/static/docs")
}

bootJar {
	dependsOn moveDocument
}


// queryDSL 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
