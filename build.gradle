buildscript {
	ext {
		springBootVersion = '2.7.3'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.sonarqube'
	apply plugin: 'jacoco'

	group 'com.zerogift'
	version = '1.0.0'
	sourceCompatibility = '11'

	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
	tasks.withType(JavaCompile){
		options.encoding = 'UTF-8'
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}


	sonarqube {
		properties {
			property 'sonar.sources', 'src'
			property 'sonar.language', 'java'
			property 'sonar.projectVersion', '1.0.0-SNAPSHOT'
			property 'sonar.sourceEncoding', 'UTF-8'
			property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
			property 'sonar.java.binaries', 'build/classes'
			property 'sonar.test.inclusions', '**/*Test.java'
			property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/**'
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
	}

	test {
		useJUnitPlatform()
		finalizedBy 'jacocoTestReport'
	}

	jacoco {
		toolVersion = "0.8.7"
	}

	jacocoTestReport {
		reports {
			xml.enabled true
			csv.enabled false
			html.enabled false
		}
	}
}

project(":module-common") {
	sonarqube {
		skipProject = true
	}
}

project(':module-api') {
	dependencies {
		implementation project(':module-common')
	}
}

project(':module-batch') {
	sonarqube {
		skipProject = true
	}

	dependencies {
		implementation project(':module-common')
	}
}